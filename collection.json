{
	"info": {
		"_postman_id": "92f0ce7c-7ead-43e2-87e9-3148bc61fa79",
		"name": "Trello API NEW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1056719"
	},
	"item": [
		{
			"name": "Get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"get exist Board Id succcess\",function(){\r",
							"let responseBody = pm.response.json();\r",
							"console.log(responseBody.lenght);\r",
							"let existBoardIds = responseBody.map(board => board.id)\r",
							"console.log(existBoardIds);\r",
							"pm.collectionVariables.set(\"existBoardIds\", existBoardIds);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/members/me/boards?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Created a new board succcess\", function(){\r",
							"    let responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.id).to.be.a('string')\r",
							"    pm.collectionVariables.set(\"idBoard\", responseBody.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let boardNumber = pm.collectionVariables.get(\"boardNumber\");\r",
							"if(isNaN(boardNumber)){\r",
							"    boardNumber =0\r",
							"}\r",
							"boardNumber++;\r",
							"pm.collectionVariables.set(\"boardNumber\",boardNumber);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/?name=Learning Postman {{boardNumber}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Learning Postman {{boardNumber}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Created TODO LIST succcess\", function(){\r",
							"    let responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.id).to.be.a('string')\r",
							"    pm.collectionVariables.set(\"todoListId\", responseBody.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=TODO&idBoard={{idBoard}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{idBoard}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Created DONE LIST succcess\", function(){\r",
							"    let responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.id).to.be.a('string')\r",
							"    pm.collectionVariables.set(\"doneListId\", responseBody.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=DONE&idBoard={{idBoard}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{idBoard}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Created A CARD succcess\", function(){\r",
							"    let responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.id).to.be.a('string')\r",
							"    pm.collectionVariables.set(\"cardId\", responseBody.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards?name=Sign-up for Trello&key={{trelloKey}}&token={{trelloToken}}&idList={{todoListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "Sign-up for Trello"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/{{cardId}}?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.clear();\r",
							"// let existBoardIds = pm.collectionVariables.get(\"existBoardIds\");\r",
							"// let idBoard = existBoardIds.pop();\r",
							"// pm.collectionVariables.set(\"idBoard\",idBoard);\r",
							"// pm.collectionVariables.set(\"existBoardIds\",existBoardIds)\r",
							"// console.log(idBoard);\r",
							"// console.log(existBoardIds);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{idBoard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "testRunCollection",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.postman.com/collections/1056719-92f0ce7c-7ead-43e2-87e9-3148bc61fa79?apikey={{POSTMAN_API_KEY}}",
					"protocol": "https",
					"host": [
						"api",
						"postman",
						"com"
					],
					"path": [
						"collections",
						"1056719-92f0ce7c-7ead-43e2-87e9-3148bc61fa79"
					],
					"query": [
						{
							"key": "apikey",
							"value": "{{POSTMAN_API_KEY}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"\r",
					"// pm.execution.setNextRequest(getNextRequest());\r",
					"\r",
					"// function getNextRequest(){\r",
					"//     let routes;\r",
					"//     if (Array.isArray(pm.globals.get(\"remainingRoutes\"))===true){\r",
					"//         routes = pm.globals.get(\"remainingRoutes\");\r",
					"//     }else{\r",
					"//         routes= pm.iterationData.get(\"routes\");\r",
					"//     }\r",
					"//     const nextRequest=routes.shift();\r",
					"//     pm.globals.set(\"remainingRoutes\", routes)\r",
					"\r",
					"//     if(nextRequest=== undefined){\r",
					"//         pm.globals.clear(\"remainingRoutes\");\r",
					"//         return null;\r",
					"//     }\r",
					"//     return nextRequest;\r",
					"// }\r",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com"
		},
		{
			"key": "trelloKey",
			"value": "aa0cf45f040628b8d1c51cf5fba4de9e"
		},
		{
			"key": "trelloToken",
			"value": "{{TRELLO_TOKEN}}"
		},
		{
			"key": "idBoard",
			"value": "66ee7c0e18aa09537aeef7ab"
		},
		{
			"key": "todoListId",
			"value": "66ee7c0f0f888c7d91d40f1c"
		},
		{
			"key": "doneListId",
			"value": "66ee7c0f9a908a2f08ad01a3"
		},
		{
			"key": "cardId",
			"value": "66ee7c1034c6379fd5df1fff"
		},
		{
			"key": "exitBoardIds",
			"value": [
				"66eaf8fcb9717e827c2016b8",
				"5611333bd680aae0cc111dc4",
				"55eae6d633bfc937848b2a81",
				"55eb0839a15b63797479b9fc"
			]
		},
		{
			"key": "boardId",
			"value": "55eb0839a15b63797479b9fc"
		},
		{
			"key": "existBoardIds",
			"value": [
				"5611333bd680aae0cc111dc4",
				"55eae6d633bfc937848b2a81"
			]
		},
		{
			"key": "boardNumber",
			"value": 6
		}
	]
}